@using MVCSalesforceCRUD.Helpers

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Salesforce + MVC Demo</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
    
    <script src="~/Scripts/Main.js"></script>
</head>
<body>
    <nav class="navbar navbar-expand-md navbar-dark bg-dark">
        <a class="navbar-brand" href="/">Salesforce + MVC Demo</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarCollapse" aria-controls="navbarCollapse" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarCollapse">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item active">
                    <a class="nav-link" href="@Url.Action("Index", "Opportunities")">Opportunities <span class="sr-only">(current)</span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Line Items</a>
                </li>
            </ul>
        </div>
    </nav>
    <main class="container">
        @{
            if (TempData["Notification"] != null && TempData["NotificationType"] != null && TempData["NotificationType"].ToString() == Enums.NotificationType.Success.ToString())
            {
                <div id="notification-success">
                    <div class="alert alert-success">
                        <strong>Success!</strong> <span>@TempData["Notification"].ToString()</span>
                    </div>
                </div>
            }

            if (TempData["Notification"] != null && TempData["NotificationType"] != null && TempData["NotificationType"].ToString() == Enums.NotificationType.Error.ToString())
            {
                <div id="notification-error">
                    <div class="alert alert-danger">
                        <strong>Error!</strong> <span>@TempData["Notification"].ToString()</span>
                    </div>
                </div>
            }
        }
        @RenderBody()
    </main>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx" crossorigin="anonymous"></script>
</body>
</html>
<style>
    #notification-success, #notification-error {
        display: inline-block;
        margin-top: 60px;
        padding: 15px;
        width: 100%;
        height: 50px;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {
        // Managing Delete operations
        var deleteOpportunityUrl = '@Url.Action("Delete","Opportunities")';
        Main.Init(deleteOpportunityUrl);

        // Managing Notification's display
        if ($("#notification-success").length > 0) {
            setTimeout(function () {
                $("#notification-success").slideUp();
            }, 3500);
        }

        if ($("#notification-error").length > 0) {
            setTimeout(function () {
                $("#notification-error").slideUp();
            }, 3500);
        }
    });

</script>