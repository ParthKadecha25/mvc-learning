@using MVCSalesforceCRUD.Helpers

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title></title>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet">
    <link href="~/Content/bootstrap-theme.css" rel="stylesheet">
    <link href="~/Content/elegant-icons-style.css" rel="stylesheet" />
    <link href="~/Content/font-awesome.min.css" rel="stylesheet" />
    <link href="~/Content/style.css" rel="stylesheet">
    <link href="~/Content/style-responsive.css" rel="stylesheet" />
    <link href="~/Content/datepicker.css" rel="stylesheet" />
    <script src="~/Scripts/jquery.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/jquery.scrollTo.min.js"></script>
    <script src="~/Scripts/jquery.nicescroll.js" type="text/javascript"></script>
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <script src="~/Scripts/scripts.js"></script>
    <script src="~/Scripts/Main.js"></script>
</head>
<body>
    <section id="container" class="">
        <header class="header dark-bg">
            <div class="toggle-nav">
                <div class="icon-reorder tooltips" data-original-title="Toggle Navigation" data-placement="bottom">
                    <i class="icon_menu"></i>
                </div>
            </div>
            <a href="" class="logo"> <span class="lite">Custom SalesForce integration in ASP.NET MVC</span></a>
        </header>
        <aside>
            <div id="sidebar" class="nav-collapse ">
                <ul class="sidebar-menu">
                    <li class="">
                        <a class="" href="@Url.Action("Index", "Opportunities")">
                            <i class="icon_search-2"></i>
                            <span>Opportunities</span>
                        </a>
                    </li>
                </ul>
            </div>
        </aside>
        <section id="main-content">
            @{
                if (TempData["Notification"] != null && TempData["NotificationType"] != null && TempData["NotificationType"].ToString() == Enums.NotificationType.Success.ToString())
                {
                    <div id="notification-success">
                        <div class="alert alert-success">
                            <strong>Success!</strong> <span>@TempData["Notification"].ToString()</span>
                        </div>
                    </div>
                }

                if (TempData["Notification"] != null && TempData["NotificationType"] != null && TempData["NotificationType"].ToString() == Enums.NotificationType.Error.ToString())
                {
                    <div id="notification-error">
                        <div class="alert alert-danger">
                            <strong>Error!</strong> <span>@TempData["Notification"].ToString()</span>
                        </div>
                    </div>
                }
            }
            @RenderBody()
        </section>
    </section>
</body>
</html>
<style>

    #notification-success, #notification-error {
        display: inline-block;
        margin-top: 60px;
        padding: 15px;
        width: 100%;
        height: 50px;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {

        var deleteLeadUrl = '@Url.Action("Delete","Leads")';
        var deleteOpportunityUrl = '@Url.Action("Delete","Opportunities")';
        Main.Init(deleteLeadUrl, deleteOpportunityUrl);

        if ($("#notification-success").length > 0) {
            setTimeout(function () {
                $("#notification-success").slideUp();
            }, 3500);
        }

        if ($("#notification-error").length > 0) {
            setTimeout(function () {
                $("#notification-error").slideUp();
            }, 3500);
        }
    });

</script>